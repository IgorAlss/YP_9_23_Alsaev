/* Функций  и параметры
при обработке большенства приложении их разделяют на функциональные модули в c# приложение состоит из классов 
которое содержит  именованные блоки кода называемые методами 
метод(функции это часть класса, которая может осуществлять действие или вычислять действие)


использование методом 
метод - это набор операторов которое выполняется вместе для создание методов необходимо создать его имя, определить список параметров и тело методов 
для вызова метода другого класса необходимо, что бы он был обьявлен как "public" вызов осуществляется по имени класса и метода 
если метод не void, то не обходимо вернуть значение соот. типа

оператор return
останавливает выполнение метода и передает управление вызовшему данные оператору 
каждый метод имеет набор своих локальных переменных они видны только в нем и при зовершении работы оно уничтожается для того чтоб переменные были видны 

для не void методов необходимо возвращать значение каждый "путь выполнения метода должен заканчиваться оператором return"
для void метод return необезателен 

использование параметров 
параметры позволяют передавать инфу из одного метода в другой, при обьявлении метода можно задать список его параметров если список пустой, то это означает 
что метод не имеет не параметров


C# 3 ВАРИАНТА передачи параметров:
по значению(
изменение значения параметра методе невлияют на значение в вызовшим методе)
по ссылке(
необходимо указывать ключивое слово ref)
выходные параметры


до вызова метода необходимо обязательно иницилизировать методы 
в c# позволяет использовать механизм передачи списка параметров изменяемой длинны ключ слово params 


модификаторы доступа это ключивые слова которые задают обьявленые уровни доступности члена или типа 


7 уровней спец возможностей модификаторов доступа 
public:доступ неограничен 
protected: доступ ограничен с содержащим классам или типом которым является производным от содержащего класса
internal: доступ ограничен текущей сборки 
protected internal
private : досутп ограничен
private protected 
file 


модификатор обстракт 
указывает, что изменяемый элемент имеет отсутвующии или неполную реалезациюд 

модификатор asilaing
позволяет указать что метод является синхронным 

static 
можно добавить в локальную функцию, используется для обьявления статического члена 

не успел
*/
